cmake_minimum_required(VERSION 2.8.4)
set(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/ArduinoToolchain.cmake)
set(CMAKE_CXX_STANDARD 17)
set(PROJECT_NAME ventilator)

set(${PROJECT_NAME}_BOARD uno)
# set(ARDUINO_CPU)
project(${PROJECT_NAME})

# Define additional source and header files or default arduino sketch files
set(${PROJECT_NAME}_SRCS arduino.cpp classes/ElectroValve.cpp classes/Debug.cpp classes/Ventilator.cpp classes/Board.cpp classes/Pin.cpp classes/InputButton.cpp classes/StartStopInputButton.cpp classes/AnalogInput.cpp classes/Alarm.cpp classes/Parameters.cpp modules/TimerOne-master/TimerOne.cpp)
set(${PROJECT_NAME}_HDRS classes/ElectroValve.h classes/Debug.h classes/Ventilator.h classes/Board.h classes/Pin.h classes/InputButton.h classes/StartStopInputButton.h classes/AnalogInput.h classes/Alarm.h classes/Parameters.h modules/TimerOne-master/TimerOne.h)

### Additional static libraries to include in the target.
# set(${PROJECT_NAME}_LIBS)

### Main sketch file
# set(${PROJECT_NAME}_SKETCH ventilator.ino)

### Add project directories into the build
# add_subdirectory()
# add_subdirectory(classes)

### Additional settings to add non-standard or your own Arduino libraries.
# For this example (libs will contain additional arduino libraries)
# An Arduino library my_lib will contain files in libs/my_lib/: my_lib.h, my_lib.cpp + any other cpp files
# link_directories(${CMAKE_CURRENT_SOURCE_DIR}/)

# For nested library sources replace ${LIB_NAME} with library name for each library
# set(_RECURSE true)

#### Additional settings for programmer. From programmers.txt
# set(${PROJECT_NAME}_PROGRAMMER avrispmkii)
set(${PROJECT_NAME}_PORT /dev/cu.usbmodem1422301)
# set(uno.upload.speed 9600)

## Verbose build process
set(${PROJECT_NAME}_AFLAGS -v)

generate_arduino_firmware(${PROJECT_NAME})


print_board_list()
print_programmer_list()
